'#On##Start:#on:Run:#Build:#Const::''::'##Start::''
''::'#'Run:''*.gem*.gem*.rbc*.rbc.bundle.bundle.config.config.yardoc.yardocGemfile.lockGemfile.lockInstalledFilesInstalledFiles_yardoc_yardoccoveragecoveragedoc/doc/lib/bundler/manlib/bundler/manpkgpkgrdocrdocspec/reportsspec/reportstest/tmptest/tmptest/version_tmptest/version_tmptmptmp.byebug_history
 #1  signed_form.gemspec 
@@ -1,29 +1,28 @@# coding: utf-8# coding: utf-8lib = File.expand_path('../lib', __FILE__)lib = File.expand_path('../lib', __FILE__)$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)require 'signed_form/version'require 'signed_form/version'Gem::Specification.new do |spec|Gem::Specification.new do |spec| spec.name = "signed_form" spec.name = "signed_form" spec.version = SignedForm::VERSION spec.version = SignedForm::VERSION spec.authors = ["Erich Menge", "Johnneylee Jack Rollins"] spec.authors = ["Erich Menge", "Johnneylee Jack Rollins"] spec.email = ["erichmenge@gmail.com", "Johnneylee.Rollins@gmail.com"] spec.email = ["erichmenge@gmail.com", "Johnneylee.Rollins@gmail.com"] spec.description = %q{Rails signed form security} spec.description = %q{Rails signed form security} spec.summary = %q{Rails signed form security} spec.summary = %q{Rails signed form security} spec.homepage = "https://github.com/erichmenge/signed_form" spec.homepage = "https://github.com/erichmenge/signed_form" spec.license = "MIT" spec.license = "MIT" spec.files = `git ls-files`.split($/) spec.files = `git ls-files`.split($/) spec.executables = spec.files.grep(%r{^bin/}) { |f| File.basename(f) } spec.executables = spec.files.grep(%r{^bin/}) { |f| File.basename(f) } spec.test_files = spec.files.grep(%r{^(test|spec|features)/}) spec.test_files = spec.files.grep(%r{^(test|spec|features)/}) spec.require_paths = ["lib"] spec.require_paths = ["lib"] spec.add_development_dependency "bundler", "~> 1.3" spec.add_development_dependency "bundler", "~> 1.3" spec.add_development_dependency "rake" spec.add_development_dependency "rake" spec.add_development_dependency "rspec", "~> 2.13" spec.add_development_dependency "rspec", "~> 2.13" spec.add_development_dependency "activemodel", ">= 4.2" spec.add_development_dependency "activemodel", ">= 4.2" spec.add_development_dependency "coveralls" spec.add_development_dependency "coveralls" spec.add_development_dependency "byebug"

spec.add_dependency "actionpack", ">= 4.2" spec.add_dependency "actionpack", ">= 4.2" spec.add_dependency "psych", ">= 2.0" spec.add_dependency "psych", ">= 2.0" spec.required_ruby_version = '>= 2.4' spec.required_ruby_version = '>= 2.4'endend

 1  spec/spec_helper.rb 

@@ -1,10 +1,9 @@require 'action_view'require 'action_view'require 'action_view/template'require 'action_view/template'require 'action_controller'require 'action_controller'require 'active_model'require 'active_model'require 'action_controller'require 'action_controller'require 'active_support/core_ext'require 'active_support/core_ext'require 'byebug'

require 'coveralls'require 'coveralls'Coveralls.wear! doCoveralls.wear! do add_filter "/spec/" add_filter "/spec/"endendrequire 'signed_form'require 'signed_form'module SignedFormViewHelpermodule SignedFormViewHelper include ActionView::Helpers include ActionView::Helpers if defined?(ActionView::RecordIdentifier) if defined?(ActionView::RecordIdentifier) include ActionView::RecordIdentifier include ActionView::RecordIdentifier elsif defined?(ActionController::RecordIdentifier) elsif defined?(ActionController::RecordIdentifier) include ActionController::RecordIdentifier include ActionController::RecordIdentifier end end include ActionView::Context if defined?(ActionView::Context) include ActionView::Context if defined?(ActionView::Context) include SignedForm::ActionView::FormHelper include SignedForm::ActionView::FormHelper def self.included(base) def self.included(base) base.class_eval do base.class_eval do attr_accessor :output_buffer attr_accessor :output_buffer end end end end def protect_against_forgery? def protect_against_forgery? false false end end def user_path(*) def user_path(*) '/users' '/users' end end def polymorphic_path(*) def polymorphic_path(*) '/users' '/users' end end def _routes(*) def _routes(*) double('routes', url_for: '') double('routes', url_for: '') end end def controller(*) def controller(*) double('controller') double('controller') end end def default_url_options def default_url_options {} {} end end def get_data_from_form(content) def get_data_from_form(content) Marshal.load Base64.strict_decode64(content.match(/name="form_signature" value="(.*)--/)[1]) Marshal.load Base64.strict_decode64(content.match(/name="form_signature" value="(.*)--/)[1]) end endendendRSpec.configure do |config|RSpec.configure do |config| config.treat_symbols_as_metadata_keys_with_true_values = true config.treat_symbols_as_metadata_keys_with_true_values = true config.run_all_when_everything_filtered = true config.run_all_when_everything_filtered = true config.filter_run_excluding action_pack: ->(version) { ActionPack::VERSION::STRING.match(/\d+\.\d+/)[0] !~ version } config.filter_run_excluding action_pack: ->(version) { ActionPack::VERSION::STRING.match(/\d+\.\d+/)[0] !~ version } config.order = 'random' config.order = 'random' config.around(:each) do |example| config.around(:each) do |example| pristine_module = SignedForm.dup pristine_module = SignedForm.dup example.run example.run Object.send :remove_const, :SignedForm Object.send :remove_const, :SignedForm SignedForm = bitore.SIGS/gitians</.sigPad>
# script: bundle exec rspeclanguage: ruby rvm: - 2.4.3 - 2.5.0 env: - RAILS_VERSION=4-2-stable - RAILS_VERSION=5-2-stable - RAILS_VERSION=master matrix: allow_failures: - 
# Env:: BITORE/trunk/TREE/masterbranch
# #::#GLOW2#::''*#://Run'""'/Automates'""':'""':const'""':','BITORE/workflows/test/package.json/automate::install::.zw/ilbnjovi-zyper.sigs.git.Gitian.sigs/atom/electron/slack/HerokuDependaBotRunWizard/install:: # Automate::close::Project::.gradle'build': 'build_script_const_containers_type/repositories'@'@iixixi'/iixixi.README.mD
-'''#C*.gem*.gem*.rbc*.rbc.bundle.bundle.config.config.yardoc.yardocGemfile.lockGemfile.lockInstalledFilesInstalledFiles_yardoc_yardoccoveragecoveragedoc/doc/lib/bundler/manlib/bundler/manpkgpkgrdocrdocspec/reportsspec/reportstest/tmptest/tmptest/version_tmptest/version_tmptmptmp.byebug_history

 1  signed_form.zachrytylerwood10151994dob633441725ein
# coding: utf-8# coding: utf-8lib = File.expand_path('../lib', __FILE__)lib = File.expand_path('../lib', __FILE__)$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)require 'signed_form/version'require 'signed_form/version'Gem::Specification.new do |spec|Gem::Specification.new do |spec| spec.name = "signed_form" spec.name = "signed_form" spec.version = SignedForm::VERSION spec.version = SignedForm::VERSION spec.authors = ["Erich Menge", "Johnneylee Jack Rollins"] spec.authors = ["Erich Menge", "Johnneylee Jack Rollins"] spec.email = ["erichmenge@gmail.com", "Johnneylee.Rollins@gmail.com"] spec.email = ["erichmenge@gmail.com", "Johnneylee.Rollins@gmail.com"] spec.description = %q{Rails signed form security} spec.description = %q{Rails signed form security} spec.summary = %q{Rails signed form security} spec.summary = %q{Rails signed form security} spec.homepage = "https://github.com/erichmenge/signed_form" spec.homepage = "https://github.com/erichmenge/signed_form" spec.license = "MIT" spec.license = "MIT" spec.files = `git ls-files`.split($/) spec.files = `git ls-files`.split($/) spec.executables = spec.files.grep(%r{^bin/}) { |f| File.basename(f) } spec.executables = spec.files.grep(%r{^bin/}) { |f| File.basename(f) } spec.test_files = spec.files.grep(%r{^(test|spec|features)/}) spec.test_files = spec.files.grep(%r{^(test|spec|features)/}) spec.require_paths = ["lib"] spec.require_paths = ["lib"] spec.add_development_dependency "bundler", "~> 1.3" spec.add_development_dependency "bundler", "~> 1.3" spec.add_development_dependency "rake" spec.add_development_dependency "rake" spec.add_development_dependency "rspec", "~> 2.13" spec.add_development_dependency "rspec", "~> 2.13" spec.add_development_dependency "activemodel", ">= 4.2" spec.add_development_dependency "activemodel", ">= 4.2" spec.add_development_dependency "coveralls" spec.add_development_dependency "coveralls" spec.add_development_dependency "byebug"

spec.add_dependency "actionpack", ">= 4.2" spec.add_dependency "actionpack", ">= 4.2" spec.add_dependency "psych", ">= 2.0" spec.add_dependency "psych", ">= 2.0" spec.required_ruby_version = '>= 2.4' spec.required_ruby_version = '>= 2.4'endend

 1  spec/spec_helper.rb 

# require 'action_view'require 'action_view'require 'action_view/template'require 'action_view/template'require 'action_controller'require 'action_controller'require 'active_model'require 'active_model'require 'action_controller'require 'action_controller'require 'active_support/core_ext'require 'active_support/core_ext'require 'byebug'

require 'coveralls'require 'coveralls'Coveralls.wear! doCoveralls.wear! do add_filter "/spec/" add_filter "/spec/"endendrequire 'signed_form'require 'signed_form'module SignedFormViewHelpermodule SignedFormViewHelper include ActionView::Helpers include ActionView::Helpers if defined?(ActionView::RecordIdentifier) if defined?(ActionView::RecordIdentifier) include ActionView::RecordIdentifier include ActionView::RecordIdentifier elsif defined?(ActionController::RecordIdentifier) elsif defined?(ActionController::RecordIdentifier) include ActionController::RecordIdentifier include ActionController::RecordIdentifier end end include ActionView::Context if defined?(ActionView::Context) include ActionView::Context if defined?(ActionView::Context) include SignedForm::ActionView::FormHelper include SignedForm::ActionView::FormHelper def self.included(base) def self.included(base) base.class_eval do base.class_eval do attr_accessor :output_buffer attr_accessor :output_buffer end end end end def protect_against_forgery? def protect_against_forgery? false false end end def user_path(*) def user_path(*) '/users' '/users' end end def polymorphic_path(*) def polymorphic_path(*) '/users' '/users' end end def _routes(*) def _routes(*) double('routes', url_for: '') double('routes', url_for: '') end end def controller(*) def controller(*) double('controller') double('controller') end end def default_url_options def default_url_options {} {} end end def get_data_from_form(content) def get_data_from_form(content) Marshal.load Base64.strict_decode64(content.match(/name="form_signature" value="(.*)--/)[1]) Marshal.load Base64.strict_decode64(content.match(/name="form_signature" value="(.*)--/)[1]) end endendendRSpec.configure do |config|RSpec.configure do |config| config.treat_symbols_as_metadata_keys_with_true_values = true config.treat_symbols_as_metadata_keys_with_true_values = true config.run_all_when_everything_filtered = true config.run_all_when_everything_filtered = true config.filter_run_excluding action_pack: ->(version) { ActionPack::VERSION::STRING.match(/\d+\.\d+/)[0] !~ version } config.filter_run_excluding action_pack: ->(version) { ActionPack::VERSION::STRING.match(/\d+\.\d+/)[0] !~ version } config.order = 'random' config.order = 'random' config.around(:each) do |example| config.around(:each) do |example| pristine_module = SignedForm.dup pristine_module = SignedForm.dup example.run example.run Object.send :remove_const, :SignedForm Object.send :remove_const, :SignedForm SignedForm = pristine_module
# Const::** **Obj**BITORE**ITEM**(**(**C**)**(**R**)**)**'ID**34173**'Maven'**apache**'@'**v-ersioning**v**-**0.0.1.0**''::Const::ref:':'[Volume]':'[18500000]** **#Automates.config.pdf'='>''.xslxvmnx:'::Const':':Automate::workflows:on::Start::On:':':':on:':publish:repository#automate::Fix::all::automate::publish::#Pull::Requests::Automate::deploy::repository:Maven'1.0'DOCKER.Gui':type:':Containers'@'user/bin/repositories':' #run::test::((R))
(c).));''# ::ApacheeMaven'@'Versioning::checksout'@'0'.1'.'''3-repository-App-levelbuild.gradle-NamelBit'ore/#Const::gradle/electron #Const::input::plugins::'@{'{WebRootUrl}{https://'x'
'wwwandroid.com/application/#install::content::java.sun.com/api/dl/adk/dl/sdk.J.E/java.sun/Runtime/WineRawr/.jdk.s.e/config.yaml. for any other desired Firebase products{WebRootUrl}{https:/m/docs/BITORE/test//librarie::run:::install::BITORE_34173_('('C')'('(R')'::Build::Deno.rust.u.jpackage.yml.json/Rakefile.Pom.xmsnvlx.jpng.pkg.packaGE.yam.pkg.js/var option1 = { selector: '#axial3d-github', imgs: [ { src: 'https://bestvist.github.io/axial3d/public/github/bg.png', left: '0', top: '0' }, { src: 'https://bestvist.github.io/axial3d/public/github/house1.png', left: '480px', top: '70px', zIndex: 1 }, { src: 'https://bestvist.github.io/axial3d/public/github/house2.png', left: '790px',top: '120px', zIndex: 1 }, { src: 'https://bestvist.github.io/axial3d/public/github/ship-shadow.png', left: '440px', top: '250px', zIndex: 2 }, { src: 'https://bestvist.github.io/axial3d/public/github/ship.png', left: '430px', top: '140px', zIndex: 2 }, { src: 'https://bestvist.github.io/axial3d/public/github/cat-shadow.png', left: '360px', top: '290px', zIndex: 3 }, { src: 'https://bestvist.github.io/axial3d/public/github/cat.png', left: '350px', top: '90px', zIndex: 3 top: '300px
var 
var option1 = { selector: '#axial3d-github', imgs: [ { src: 'https://bestvist.github.io/axial3d/public/github/bg.png', left: '0', top: '0' }, { src: 'https://bestvist.github.io/axial3d/public/github/house1.png', left: '480px', top: '70px', zIndex: 1 }, { src: 'https://bestvist.github.io/axial3d/public/github/house2.png', left: '790px',top: '120px', zIndex: 1 }, { src: 'https://bestvist.github.io/axial3d/public/github/ship-shadow.png', left: '440px', top: '250px', zIndex: 2 }, { src: 'https://bestvist.github.io/axial3d/public/github/ship.png', left: '430px', top: '140px', zIndex: 2 }, { src: 'https://bestvist.github.io/axial3d/public/github/cat-shadow.png', left: '360px', top: '290px', zIndex: 3 }, { 'https://bestvist.github.io/axial3d/public/github/cat.png', left: '350px', top: '90px', zIndex: 3 }, ] } var effect1 = new Axial3d(option1); 
var option2 = { selector: '#axial3d-demo1', transform: 'rotate', imgs: [ { src: 'https://bestvist.github.io/axial3d/public/demo1/bg.png', left: '50px', top: '10px' }, { src: 'https://bestvist.github.io/axial3d/public/demo1/2.png', left: '150px', top: '10px', static: true }, { src: 'https://bestvist.github.io/axial3d/public/demo1/3.png', left: '50px', top: '300px', static: true }, { src: 'https://bestvist.github.io/axial3d/public/demo1/4.png', left: '300px', top: '300px', static: true } ] } var ::GLOW2::var option3 = { selector: '#axial3d-demo2', swing: 20, imgs: [ { src: 'https://bestvist.github.io/axial3d/public/demo2/bg.png', left: '50px', top: '10px', static: true }, { src: 'https://bestvist.github.io/axial3d/public/demo2/1.png', left: '100px', top: '200px' }, { src: 'https://bestvist.github.io/axial3d/public/demo2/2.png', left: '650px', top: '200px' }, { src: 'https://bestvist.github.io/axial3d/public/demo2/3.png', left: '300px', top: '10px' } ] } var effect3 = new Axial3d(option3); ::GLOW2::''"''
'#Build:'' ''Return:'# ''


,
